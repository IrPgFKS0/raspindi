name: arm32

on:
  push:
  pull_request:


jobs:
  arm32:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: bullseye arm32

    steps:
      - uses: actions/checkout@v3

      - uses: uraimo/run-on-arch-action@v2
        name: Build armv7
        id: runcmd32
        with:
          arch: armv7
          distro: bullseye

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # dockerRunArgs: |
            # --platform linux/arm32/v7

          install: |
            apt-get update -q -y
            apt-get install -q -y gpg
            gpg --keyserver keyserver.ubuntu.com --recv-keys cf8a1af502a2aa2d763bae7e82b129927fa3303e
            gpg --armor --export cf8a1af502a2aa2d763bae7e82b129927fa3303e | apt-key add -

            echo "deb http://archive.raspberrypi.org/debian/ bullseye main" > /etc/apt/sources.list.d/raspi.list
            apt-get update -q -y
            apt-get install -q -y --no-install-recommends cmake make gcc g++ libc6-dev libconfig++-dev libboost-program-options-dev libavahi-client3 cmake libcamera-dev libevent-pthreads-2.1-7 libevent-core-2.1-7 libevent-dev libcamera-dev libcamera0 libcamera-tools libcamera-apps-lite

          run: |
            ln -s lib32 lib
            mkdir build && cd build
            cmake ..
            make